"""add metas table

Revision ID: 5ecdf00d805e
Revises: d32ee62c4759
Create Date: 2021-07-28 23:26:50.582617

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '5ecdf00d805e'
down_revision = 'd32ee62c4759'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(  # type: ignore
        'metas',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('key', sa.Text(), nullable=False),
        sa.Column('object_key', sa.Text(), nullable=True),
        sa.Column('scope', sa.Text(), nullable=False),
        sa.Column('repo', sa.Text(), nullable=False),
        sa.Column('checksum', sa.String(64), nullable=True),
        sa.Column('data', sa.Integer(), nullable=True),
        sa.Column('value', sa.dialects.postgresql.BYTEA(), nullable=True),
        sa.ForeignKeyConstraint(
            ['data'],
            ['storage.id'],
            name=op.f('fk__metas__data__storage'),  # type: ignore
            onupdate='CASCADE',
            ondelete='RESTRICT',
        ),
        sa.ForeignKeyConstraint(
            ['object_key', 'scope', 'repo'],
            ['objects.key', 'objects.scope', 'objects.repo'],
            name=op.f('fk__metas__object_key_scope_repo__objects'),  # type: ignore
            onupdate='CASCADE',
            ondelete='CASCADE'),
        sa.ForeignKeyConstraint(
            ['scope', 'repo'],
            ['scopes.name', 'scopes.repo'],
            name=op.f('fk__metas__scope_repo__scopes'),  # type: ignore
            onupdate='CASCADE',
            ondelete='CASCADE',
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk__metas')),  # type: ignore
        sa.UniqueConstraint(
            'key',
            'object_key',
            'scope',
            'repo',
            name='pk_real_metas_object',
        ),
    )
    op.create_index(  # type: ignore
        'pk_real_metas_scope',
        'metas',
        ['key', 'scope', 'repo'],
        unique=True,
        postgresql_where=sa.text('object_key IS NULL'),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(  # type: ignore
        'pk_real_metas_scope',
        table_name='metas',
        postgresql_where=sa.text('object_key IS NULL'),
    )
    op.drop_table('metas')  # type: ignore
    # ### end Alembic commands ###
